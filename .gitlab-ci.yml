stages:
  - sonar-check
  - build
  - before_test
  - test
  - after_test
  - rebuilding

sonarqube-check:
  stage: sonar-check
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_TOKEN: "a10ad2fb341a5da90633dbb9c5bcfbff5f31f203"
    SONAR_HOST_URL: "http://91.241.64.154:9000/"
    SONAR_PROJECT_KEY: "pet_clinic"
  script:
    - mvn compile -P testprod sonar:sonar -e -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
  tags:
    - docker_runner
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

building:
  stage: build
  before_script:
    - docker-compose down
    - docker image prune -a -f
    - docker-compose build pets_db || true
    - docker-compose build petclinic
  script:
    - docker-compose up -d pets_db
    - docker-compose up -d petclinic
  after_script:
    - docker image prune -f
  tags:
    - clinic_shell
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

before_test:
  stage: before_test
  script:
    - docker-compose build test_db
    - docker-compose up -d test_db
  tags:
    - clinic_shell
  rules:
    - if: $CI_MERGE_REQUEST_IID

test_maven:
  stage: test
  script:
    - mvn clean test -P testprod
  tags:
    - docker_runner
  artifacts:
    reports:
      junit:
        - web/target/surefire-reports/TEST-*.xml
        - web/target/failsafe-reports/TEST-*.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID

after_test:
  stage: after_test
  script:
    - docker-compose rm -f -s test_db
  tags:
    - clinic_shell
  rules:
    - if: $CI_MERGE_REQUEST_IID

rebuilding:
  stage: rebuilding
  before_script:
    - docker-compose down -v
    - docker image prune -a -f
    - docker-compose build pets_db
    - docker-compose build petclinic
  script:
    - docker-compose up -d pets_db
    - docker-compose up -d petclinic
  after_script:
    - docker image prune -f
  tags:
    - clinic_shell
  when: manual
