stages:
  #  - sonar-check
  - build
  - test
  - rebuilding

#sonarqube-check:
#  stage: sonar-check
#  variables:
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#    SONAR_TOKEN: "ba00cdec2010b5084058842e1595cdb104055c9b"
#    SONAR_HOST_URL: "http://sonarqube:9000/"
#    SONAR_PROJECT_KEY: "pet_clinic"
#  script:
#    - mvn compile -P testprod sonar:sonar -e -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
#  tags:
#    - clinic_docker_runner
#  allow_failure: false
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

building:
  stage: build
  before_script:
    - docker-compose down
    - docker image prune -a -f
    - docker-compose build PROD_SERVICES
  script:
    - docker-compose up -d
  after_script:
    - docker image prune -f
  tags:
    - clinic_shell
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

test_maven:
  stage: test
  #  variables:
  #    MOUNT_POINT: /builds/$CI_PROJECT_PATH/mnt
  before_script:
    - apt-get update
    - apt-get -y install ca-certificates gnupg lsb-release
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt-get update
    - apt-get -y install docker-ce docker-ce-cli containerd.io
    - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - docker-compose start test_db
    - docker-compose start test_petclinic
  #    - mkdir -p "$MOUNT_POINT"
  #    - docker run -v "$MOUNT_POINT:/mnt" -d -e POSTGRES_PASSWORD=123456Qwe -e POSTGRES_USER=jm -e POSTGRES_DB=test_pets -e PGDATA=/var/lib/postgresql/data/test_pets -p 5434:5432 --name test_pets_db library/postgres:latest
  #    - docker build -t test_petclinic .
  #    - docker run -v "$MOUNT_POINT:/mnt" -d -e SPRING_PROFILES_ACTIVE=test -p 8080:8080 --name test_petclinic_run test_petclinic
  script:
    - mvn clean test -P testprod
  after_script:
    - docker-compose stop test_petclinic
    - docker-compose stop test_db
    - docker-compose rm -f test_petclinic
    - docker-compose rm -f test_db
  #    - docker stop test_pets_db
  #    - docker stop test_petclinic_run
  #    - docker rm test_pets_db
  #    - docker rm test_petclinic_run
  tags:
    - clinic_docker_runner
  artifacts:
    reports:
      junit:
        - web/target/surefire-reports/TEST-*.xml
        - web/target/failsafe-reports/TEST-*.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID