stages:
#  - build
  - test
  - sonar-check

#building:
#  stage: build
#  script:
#    - docker-compose up --build $TEST_APP_SERVICE
#  tags:
#    - clinic_shell
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'master'

test_maven:
  stage: test
  variables:
    TEST_APP_SERVICE: "test_petclinic"
    TEST_DB_SERVICE: "test_db"
#  before_script:
  script:
    - docker-compose up --build $TEST_APP_SERVICE $TEST_DB_SERVICE
    - mvn clean test -P testprod
    - docker compose stop $TEST_APP_SERVICE $TEST_DB_SERVICE
    - docker-compose rm $TEST_APP_SERVICE $TEST_DB_SERVICE
  #  after_script:
  tags:
    - clinic_docker_runner
  artifacts:
    reports:
      junit:
        - web/target/surefire-reports/TEST-*.xml
        - web/target/failsafe-reports/TEST-*.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID

sonarqube-check:
  stage: sonar-check
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_TOKEN: "ba00cdec2010b5084058842e1595cdb104055c9b"
    SONAR_HOST_URL: "http://sonarqube:9000/"
    SONAR_PROJECT_KEY: "pet_clinic"
  script:
    - mvn compile -P testprod sonar:sonar -e -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
  tags:
    - clinic_docker_runner
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
