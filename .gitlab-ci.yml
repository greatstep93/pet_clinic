stages:
  - sonar-check
  - test
  - build

#building:
#  stage: build
#  script:
#    - docker-compose up -d
#  tags:
#    - clinic_shell
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'master'

sonarqube-check:
  stage: sonar-check
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SONAR_TOKEN: "ba00cdec2010b5084058842e1595cdb104055c9b"
    SONAR_HOST_URL: "http://sonarqube:9000/"
    SONAR_PROJECT_KEY: "pet_clinic"
  script:
    - mvn compile -P testprod sonar:sonar -e -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
  tags:
    - clinic_docker_runner
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test_maven:
  stage: test
  before_script:
    - docker-compose up
    - docker image prune -a -f
    - docker-compose build
  script:
    - mvn clean test -P testprod
  after_script:
    - docker image prune -f
  tags:
    - clinic_docker_runner
  artifacts:
    reports:
      junit:
        - web/target/surefire-reports/TEST-*.xml
        - web/target/failsafe-reports/TEST-*.xml
  rules:
    - if: $CI_MERGE_REQUEST_IID